<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
  ~
  ~ This software is the property of WSO2 LLC. and its suppliers, if any.
  ~ Dissemination of any information or reproduction of any material contained
  ~ herein is strictly forbidden, unless permitted by WSO2 in accordance with
  ~ the WSO2 Software License available at: https://wso2.com/licenses/eula/3.2
  ~ For specific language governing the permissions and limitations under
  ~ this license, please see the license as well as any agreement youâ€™ve
  ~ entered into with WSO2 governing the purchase of this software and any
  ~ associated services.
  -->

<!-- Generated on 23-Fri, 08, 2024 16:11:19+0530 -->

<template xmlns="http://ws.apache.org/ns/synapse" name="customers.generateReachForecast">
    <!-- Path Parameter List -->
    <parameter name="customerId" description="Required. The ID of the customer."/>
    <!-- Request Body Parameter List -->
    <parameter name="campaignDuration" description="Required. Campaign duration. Type: object (CampaignDuration)"/>
    <parameter name="cookieFrequencyCapSetting"
               description="Chosen cookie frequency cap to be applied to each planned product. This is equivalent to the frequency cap exposed in Google Ads when creating a campaign, it represents the maximum number of times an ad can be shown to the same user during a specified time interval. If not specified, a default of 0 (no cap) is applied. Type: object (FrequencyCap)"/>
    <parameter name="targeting"
               description="The targeting to be applied to all products selected in the product mix. Type: object (Targeting)"/>
    <parameter name="plannedProducts"
               description="Required. The list of products to be forecast. The max number of allowed planned products is 15. Type: object (PlannedProduct)"/>
    <parameter name="forecastMetricOptions"
               description="Controls the forecast metrics returned in the response. Type: object (ForecastMetricOptions)"/>
    <parameter name="currencyCode"
               description="The currency code. Three-character ISO 4217 currency code. Type: string"/>
    <parameter name="cookieFrequencyCap"
               description="Chosen cookie frequency cap to be applied to each planned product. This is equivalent to the frequency cap exposed in Google Ads when creating a campaign, it represents the maximum number of times an ad can be shown to the same user. If not specified, no cap is applied. Type: integer"/>
    <parameter name="minEffectiveFrequency"
               description="Chosen minimum effective frequency (the number of times a person was exposed to the ad) for the reported reach metrics [1-10]. This won&apos;t affect the targeting, but just the reporting. If not specified, a default of 1 is applied. Type: integer"/>
    <parameter name="effectiveFrequencyLimit"
               description="The highest minimum effective frequency (the number of times a person was exposed to the ad) value [1-10] to include in Forecast.effective_frequency_breakdowns. If not specified, Forecast.effective_frequency_breakdowns will not be provided. Type: object (EffectiveFrequencyLimit)"/>
    <parameter name="customerReachGroup"
               description="The name of the customer being planned for. This is a user-defined value. Type: string"/>
    <sequence>
        <class name="org.wso2.carbon.google.ads.connector.RestURLBuilder">
            <property name="operationPath" value="/v17/customers/{customerId}:generateReachForecast"/>
            <property name="pathParameters" value="customerId,"/>
        </class>
        <payloadFactory media-type="json" template-type="freemarker">
            <format>
                <![CDATA[{
                                                                                        <#if (args.arg1)?has_content>
                                    "campaignDuration": ${args.arg1},                                </#if>
                                                                                            <#if (args.arg2)?has_content>
                                    "cookieFrequencyCapSetting": ${args.arg2},                                </#if>
                                                                                            <#if (args.arg3)?has_content>
                                    "targeting": ${args.arg3},                                </#if>
                                                                                            <#if (args.arg4)?has_content>
                                    "plannedProducts": ${args.arg4},                                </#if>
                                                                                            <#if (args.arg5)?has_content>
                                    "forecastMetricOptions": ${args.arg5},                                </#if>
                                                                                            <#if (args.arg6)?has_content>
                                    "currencyCode": "${args.arg6}",                                </#if>
                                                                                            <#if (args.arg7)?has_content>
                                    "cookieFrequencyCap": "${args.arg7}",                                </#if>
                                                                                            <#if (args.arg8)?has_content>
                                    "minEffectiveFrequency": "${args.arg8}",                                </#if>
                                                                                            <#if (args.arg9)?has_content>
                                    "effectiveFrequencyLimit": ${args.arg9},                                </#if>
                                                                                            <#if (args.arg10)?has_content>
                                    "customerReachGroup": "${args.arg10}"                                </#if>
                                                                                        }]]>
            </format>
            <args>
                <arg evaluator="xml" expression="$func:campaignDuration"/>
                <arg evaluator="xml" expression="$func:cookieFrequencyCapSetting"/>
                <arg evaluator="xml" expression="$func:targeting"/>
                <arg evaluator="xml" expression="$func:plannedProducts"/>
                <arg evaluator="xml" expression="$func:forecastMetricOptions"/>
                <arg evaluator="xml" expression="$func:currencyCode"/>
                <arg evaluator="xml" expression="$func:cookieFrequencyCap"/>
                <arg evaluator="xml" expression="$func:minEffectiveFrequency"/>
                <arg evaluator="xml" expression="$func:effectiveFrequencyLimit"/>
                <arg evaluator="xml" expression="$func:customerReachGroup"/>
            </args>
        </payloadFactory>
        <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
        <property name="messageType" value="application/json" scope="axis2"/>
        <property name="ContentType" value="application/json" scope="axis2"/>
        <header name="Accept" value="application/json" scope="transport" action="set"/>
        <call>
            <endpoint>
                <http method="POST" uri-template="{uri.var.base}{+uri.var.urlPath}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom header information -->
        <header name="request-id" scope="transport" action="remove"/>
        <header name="x-xss-protection" scope="transport" action="remove"/>
        <header name="vary" scope="transport" action="remove"/>
        <header name="alt-svc" scope="transport" action="remove"/>
        <header name="server" scope="transport" action="remove"/>
        <header name="access-control-allow-origin" scope="transport" action="remove"/>
        <header name="access-control-allow-methods" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="access-control-allow-headers" scope="transport" action="remove"/>
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="cache-control" scope="transport" action="remove"/>
    </sequence>
</template>
